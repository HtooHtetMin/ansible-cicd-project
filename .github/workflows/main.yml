name: Build, Push and Deploy

env:
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  SSH_HOST: ${{ vars.SSH_HOST }}
  SSH_USERNAME: ${{ vars.SSH_USERNAME }}
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}
  VERSION: ${{ github.run_number }}
  DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
  ENABLE_SSL: ${{ vars.ENABLE_SSL }}

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Build Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/nextjs-app:${{ github.run_number }}
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}:latest
          cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > private.key
          chmod 600 private.key

      - name: Setup Ansible with SSH multiplexing
        run: |
          echo "[defaults]" > ansible.cfg
          echo "inventory = inventory" >> ansible.cfg
          echo "remote_user = $SSH_USERNAME" >> ansible.cfg
          echo "private_key_file = private.key" >> ansible.cfg
          echo "host_key_checking = False" >> ansible.cfg
          echo "interpreter_python = auto_silent" >> ansible.cfg
          echo "[ssh_connection]" >> ansible.cfg
          echo "ssh_args = -o ControlMaster=auto -o ControlPersist=60s" >> ansible.cfg
          echo "[servers]" > inventory
          echo "Server ansible_host=$SSH_HOST ansible_user=$SSH_USERNAME ansible_ssh_private_key_file=private.key" >> inventory

      - name: Install Ansible roles
        run: |
          ansible-galaxy install geerlingguy.swap

      - name: Run Ansible playbook
        run: |
          ansible-playbook -i inventory \
            --extra-vars "image_name=${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ github.run_number }}" \
            --extra-vars "domain_name=${{ vars.DOMAIN_NAME }}" \
            --extra-vars "dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }}" \
            --extra-vars "dockerhub_token=${{ secrets.DOCKERHUB_TOKEN }}" \
            --extra-vars "enable_ssl=${{ vars.ENABLE_SSL }}" \
            devops/playbook.yml
